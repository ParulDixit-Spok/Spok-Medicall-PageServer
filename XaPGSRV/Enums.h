#pragma once

// enums.h


// keep in sync with "text" in globals.cpp
enum 
	{
	DBMS_UNKNOWN = 0, 
	DBMS_PERVASIVE_7, 
	DBMS_PERVASIVE_V8, 
	DBMS_MICROSOFT_SQL_2000 
	};


enum DATA_SOURCE  
	{
	DATA_SOURCE_NONE = 0, 
	DATA_SOURCE_NETWORK, 
	DATA_SOURCE_LOCAL
	};


enum 
	{
	MESSAGE_SEARCH_NEWER_TO_OLDER = 0,
	MESSAGE_SEARCH_OLDER_TO_NEWER
	};


enum 
	{
	REQUEST_PLAY_OLDER_MESSAGE = 0,
	REQUEST_REPEAT_MESSAGE,
	REQUEST_PLAY_FIRST_MESSAGE,
	REQUEST_PLAY_NEWER_MESSAGE,
	REQUEST_PLAY_NEXT_MESSAGE
	};


// arguments to SetStatusText() these
//  are the names for the individual segments 
//  of the status line.
enum 
	{
	STATUS_LINE_MESSAGE = 0,
	STATUS_LINE_EXPERIMENT,
	STATUS_LINE_DATABASE_MODE,
	STATUS_LINE_VERSION,
	STATUS_LINE_BUILD_DATE_AND_TIME,	
	STATUS_LINE_BIT_FIELD_1,
	STATUS_LINE_TIME_OF_DAY,
	STATUS_LINE_N_PARTS
	};


// better names for return values
//  function GetLogPageMsg().
enum 
	{ 
	MSG_FIND_MSGS_UNAVAILABLE = 0, 
	MSG_FIND_NO_MSGS = 1, 
	MSG_FIND_NO_MORE_MSGS = 2, 
	MSG_FIND_NUMERIC_MSG_FOUND = 3, 
	MSG_FIND_STILL_LOOKING = 4, 
	MSG_FIND_DIAL_0_TEXT_MSG = 5, 
	MSG_FIND_VOICE_MSG = 6, 
	MSG_FIND_TEXT_MSG = 7, 
	MSG_FIND_XN_NUMERIC_MSG = 8, 
	MSG_FIND_STATUS_CHANGE_MSG = 9, 
	MSG_FIND_COVERAGE_CHANGE_MSG = 10 
	};


// application exit codes/reasons for
//  the application to stop.
enum
	{
	APP_EXIT_USER_REQUEST_SYSTEM = 0,
	APP_EXIT_USER_REQUEST_MENU,
	APP_EXIT_INIT_APPLICATION_FAILED,
	APP_EXIT_INIT_INSTANCE_FAILED,
	APP_EXIT_BAD_COMMAND_LINE_OPTION,
	APP_EXIT_ACCESS_EXCEPTION,
	APP_EXIT_EXCEPTION_INT_DIVIDE_BY_ZERO,
	APP_EXIT_PRIV_INSTRUCTION_EXCEPTION,
	APP_EXIT_UNKNOWN_EXCEPTION,
	APP_EXIT_NEW_EXE_DETECTED,
	APP_EXIT_UNEXPECTED_EXIT,
	APP_EXIT_SOFTWARE_EXCEPTION,
	APP_EXIT_BAD_PARAMETER_FILE,
	APP_EXIT_EXIT_FOR_RESTART,
	APP_EXIT_OPERATING_SYSTEM_VERSION_NG,
	APP_EXIT_CANT_CREATE_LOG_SUBDIRECTORY
	};
	
		
enum	
	{
	DBA_RECORD_ACCESS_ERROR = 0,
	DBA_RECORD_FOUND, 
	DBA_RECORD_NOT_FOUND
	};

 		
enum	
	{
	REMINDER_ADD = 0,
	REMINDER_UPDATE,
	REMINDER_DELETE
	};


enum	
	{
	MODE_IDLE = 0,
	MODE_ALWAYS_ACTIVE,
	MODE_STANDBY,
	MODE_ACTIVE
	};


enum	
	{
	EVENT_GO_ACTIVE = 0,
	EVENT_GO_STANDBY,
	EVENT_NONE
	};

enum	
	{
	MIDNIGHT_STATE_IDLE = 0,

	MIDNIGHT_STATE_STEP1_INITIALIZE,
	MIDNIGHT_STATE_STEP1_RUN,
	MIDNIGHT_STATE_STEP1_CLEANUP,

	MIDNIGHT_STATE_STEP2_INITIALIZE,
	MIDNIGHT_STATE_STEP2_RUN,
	MIDNIGHT_STATE_STEP2_CLEANUP,

	MIDNIGHT_STATE_STEP3_INITIALIZE,
	MIDNIGHT_STATE_STEP3_RUN,
	MIDNIGHT_STATE_STEP3_CLEANUP,

	MIDNIGHT_STATE_STEP4_INITIALIZE,
	MIDNIGHT_STATE_STEP4_RUN,
	MIDNIGHT_STATE_STEP4_CLEANUP,

	MIDNIGHT_STATE_STEP5_INITIALIZE,
	MIDNIGHT_STATE_STEP5_RUN,
	MIDNIGHT_STATE_STEP5_CLEANUP,

	MIDNIGHT_STATE_FINAL
	};


// these enums are posted to the registry,
//  so that other applications can know the internal operating mode, 
//  and database source currently being used by PageServer.
//  note: the data source can be examined only when the page server is ACTIVE. 
//   
enum REGISTRY_POST_RUN_MODE  
	{
	REGISTRY_POST_RUN_MODE_SHUTDOWN = 0, 
	REGISTRY_POST_RUN_MODE_STANDBY,
	REGISTRY_POST_RUN_MODE_ACTIVE
	};

enum REGISTRY_POST_DATA_SOURCE  
	{
	REGISTRY_POST_DATA_SOURCE_NONE = 0, 
	REGISTRY_POST_DATA_SOURCE_LOCAL,
	REGISTRY_POST_DATA_SOURCE_NETWORK
	};


